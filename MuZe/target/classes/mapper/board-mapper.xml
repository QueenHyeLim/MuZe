<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boardMapper">

	<resultMap type="board" id="boardResultSet">
		<result column="BOARD_NO" property="boardNo"/>
		<result column="BOARD_WRITER" property="boardWriter"/>
		<result column="CATE_NO" property="cateNo"/>
		<result column="BOARD_TITLE" property="boardTitle"/>
		<result column="BOARD_CONTENT" property="boardContent"/>
		<result column="CREATE_DATE" property="createDate"/>
		<result column="COUNT" property="count"/>
		<result column="USER_ID" property="userId"/>
	</resultMap>
	
	<resultMap type="reply" id="replyResultSet">
		<result column="BREP_NO" property="brepNo"/>
		<result column="BOARD_NO" property="boardNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="REP_CONTENT" property="repContent"/>
		<result column="CREATE_DATE" property="creaetDate"/>
		<result column="USER_ID" property="replyWriter"/>
	</resultMap>
	
	<resultMap type="report" id="reportResultSet">
		<result column="REP_NO" property="repNo"/>
		<result column="BOARD_NO" property="boardNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="REP_TYPE" property="repType"/>
	</resultMap>
	
	<resultMap type="deal" id="dealResultSet">
		<result column="DEAL_NO" property="dealNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="SHOW_TITLE" property="showTitle"/>
		<result column="TICKET_DATE" property="ticketDate"/>
		<result column="TICKET_TIME" property="ticketTime"/>
		<result column="SEAT_FLOOR" property="seatFloor"/>
		<result column="SEAT_RANK" property="seatRank"/>
		<result column="SEAT_AREA" property="seatArea"/>
		<result column="SEAT_COL" property="seatCol"/>
		<result column="SEAT_DES" property="seatDes"/>
		<result column="TICKET_PRICE" property="ticketPrice"/>
		<result column="TICKET_MANY" property="ticketMany"/>
		<result column="OTHER" property="other"/>
		<result column="SALE_STATUS" property="saleStatus"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="USER_ID" property="dealWriter"/>
	</resultMap>
	
	<resultMap type="like" id="likeResultSet">
		<result column="CATE_NO" property="cateNo"/>
		<result column="CONTENT_NO" property="contentNo"/>
		<result column="USER_NO" property="userNo"/>
		<result column="LIKE_DATE" property="likeDate"/>
	</resultMap>

	<select id="selectFboardCount" resultType="_int">
		SELECT
				COUNT(*)
		FROM
				BOARD
		WHERE
				CATE_NO = 30
		AND
				BOARD_STATUS = 'Y'
	</select>
	
	<select id="selectFboardList" resultMap="boardResultSet">
		SELECT
				BOARD_NO,
				BOARD_WRITER,
				USER_ID,
				BOARD_TITLE,
				TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE",
				COUNT
		FROM
				BOARD
		JOIN
				MEMBER ON (USER_NO = BOARD_WRITER)
		WHERE
				CATE_NO = 30
		AND
				BOARD_STATUS = 'Y'
		ORDER
		   BY
		   		BOARD_NO DESC
	</select>
	
	<update id="increaseCount" parameterType="_int">
		UPDATE
				BOARD
		SET
				COUNT = COUNT + 1
		WHERE
				BOARD_NO = #{boardNo}
		AND
				BOARD_STATUS = 'Y'
	</update>
	
	<select id="selectFboard" parameterType="_int" resultMap="boardResultSet">
		SELECT
				BOARD_NO,
				BOARD_WRITER,
				USER_ID,
				BOARD_TITLE,
				BOARD_CONTENT,
				CREATE_DATE,
				COUNT
		FROM
				BOARD
		JOIN
				MEMBER ON (USER_NO = BOARD_WRITER)
		WHERE
				BOARD_NO = #{boardNo}
	</select>
	
	<insert id="insertFboard" parameterType="board">
		INSERT
		  INTO
		  		BOARD
		  		(
		  		BOARD_NO,
		  		BOARD_TITLE,
		  		BOARD_CONTENT,
		  		BOARD_WRITER,
		  		CATE_NO
		  		)
		VALUES
				(
				SEQ_BOARD_NO.NEXTVAL,
				#{boardTitle},
				#{boardContent},
				#{boardWriter},
				30
				)
	</insert>
	
	<update id="updateFBoard" parameterType="board">
		UPDATE
				BOARD
		SET
				BOARD_TITLE = #{boardTitle},
				BOARD_CONTENT = #{boardContent}
		WHERE
				BOARD_NO = #{boardNo}
	</update>
	
	<update id="deleteFBoard" parameterType="_int">
		UPDATE
				BOARD
		SET
				BOARD_STATUS = 'N'
		WHERE
				BOARD_NO = #{boardNo}
	</update>

	<insert id="insertFReply" parameterType="reply">
		INSERT
		  INTO
		  		REPLY
		  		(
		  		BREP_NO,
		  		BOARD_NO,
		  		USER_NO,
		  		REP_CONTENT
		  		)
		VALUES
				(
				SEQ_BREP_NO.NEXTVAL,
				#{boardNo},
				#{userNo},
				#{repContent}
				)
	</insert>
	
	<select id="selectFReplyList" parameterType="_int" resultMap="replyResultSet">
		SELECT
		 		BREP_NO,
		 		BOARD_NO,
		 		USER_ID,
		 		REP_CONTENT,
		 		CREATE_DATE
		 FROM
		 		REPLY
		 JOIN
		 		MEMBER USING(USER_NO)
		 WHERE
		 		BOARD_NO = #{boardNo}
		 ORDER
		 	BY
		 		BREP_NO DESC
	</select>
	
	<delete id="deleteFReply" parameterType="_int">
		DELETE
		  FROM
		  		REPLY
		WHERE
				BREP_NO = #{fRno}
	</delete>
	
	<insert id="insertFbReport" parameterType="report">
		INSERT
		  INTO
		  		REPORT
		VALUES
				(
				SEQ_REP_NO.NEXTVAL,
				#{boardNo},
				#{userNo},
				#{repType}
				)
	</insert>

	
	<select id="selectDealCount" resultType="_int">
		SELECT
				COUNT(*)
		FROM
				DEAL
	</select>
	
	<select id="selectDealList" resultMap="dealResultSet">
		SELECT
				DEAL_NO,
				USER_ID,
				SHOW_TITLE,
				TICKET_DATE,
				SEAT_FLOOR,
				SEAT_RANK,
				SEAT_AREA,
				SEAT_COL,
				SEAT_DES,
				TICKET_PRICE,
				TICKET_MANY
		FROM
				DEAL
		JOIN
				MEMBER USING(USER_NO)
		WHERE
				SALE_STATUS = 'N'
		ORDER
		   BY
		   		DEAL_NO DESC
	</select>
	
	<insert id="insertDeal" parameterType="deal">
		INSERT
		  INTO
		  		DEAL
		  		(
		  		DEAL_NO,
		  		USER_NO,
		  		TICKET_DATE,
		  		TICKET_TIME,
		  		SEAT_FLOOR,
		  		SEAT_RANK,
		  		SEAT_AREA,
		  		SEAT_COL,
		  		SEAT_DES,
		  		TICKET_PRICE,
		  		TICKET_MANY,
		  		OTHER,
		  		SHOW_TITLE,
		  		ORIGIN_NAME,
		  		CHANGE_NAME
		  		)
		VALUES
				(
				SEQ_DEAL_NO.NEXTVAL,
				#{userNo},
				#{ticketDate},
				#{ticketTime},
				#{seatFloor},
				#{seatRank},
				#{seatArea},
				#{seatCol},
				#{seatDes},
				#{ticketPrice},
				#{ticketMany},
				#{other},
				#{showTitle},
				#{originName},
				#{changeName}
				)
	</insert>
	
	<select id="selectDeal" parameterType="_int" resultMap="dealResultSet">
		SELECT
				DEAL_NO,
				USER_ID,
				USER_NO,
				TO_CHAR(TICKET_DATE, 'YYYY-MM-DD') AS TICKET_DATE,
				TICKET_TIME,
				SEAT_FLOOR,
				SEAT_RANK,
				SEAT_AREA,
				SEAT_COL,
				SEAT_DES,
				TICKET_PRICE,
				TICKET_MANY,
				OTHER,
				SHOW_TITLE,
				SALE_STATUS,
				ORIGIN_NAME,
				CHANGE_NAME
		FROM
				DEAL
		JOIN
				MEMBER USING(USER_NO)
		WHERE
				DEAL_NO = #{dealNo}
	</select>
	
	<update id="updateDeal" parameterType="deal">
		UPDATE
		  		DEAL
		SET
				TICKET_DATE = #{ticketDate},
				TICKET_TIME = #{ticketTime},
				SEAT_FLOOR = #{seatFloor},
				SEAT_RANK = #{seatRank},
				SEAT_AREA = #{seatArea},
				SEAT_COL = #{seatCol},
				SEAT_DES = #{seatDes},
				TICKET_PRICE = #{ticketPrice},
				TICKET_MANY = #{ticketMany},
				OTHER = #{other},
				SHOW_TITLE = #{showTitle},
				SALE_STATUS = #{saleStatus},
				ORIGIN_NAME = #{originName},
				CHANGE_NAME = #{changeName}
		WHERE
				DEAL_NO = #{dealNo}
	</update>
	
	<delete id="deleteDeal" parameterType="_int">
		DELETE
		  FROM
				DEAL
		 WHERE
		 		DEAL_NO = ${dealNo}
	</delete>
	
	<insert id="insertBoardLike" parameterType="like">
		INSERT
		  INTO
		  		BOARD_LIKE
		  		(
		  		CATE_NO,
		  		CONTENT_NO,
				USER_NO
		  		)
		VALUES
				(
				#{cateNo},
				#{contentNo},
				#{userNo}
				)
	</insert>
	
	<select id="selectBoardLike" parameterType="like" resultType="_int">
		SELECT
				COUNT(*)
		FROM
				BOARD_LIKE
		WHERE
				CONTENT_NO = #{contentNo}
		AND
				USER_NO = #{userNo}
		AND
				CATE_NO = #{cateNo}
	</select>
	
	<delete id="deleteBoardLike" parameterType="like">
		DELETE
		  FROM
		  		BOARD_LIKE
		WHERE
				CONTENT_NO = #{contentNo}
		AND
				USER_NO = #{userNo}
		AND
				CATE_NO = #{cateNo}
	</delete>
	
	<select id="selectFSearchCount" parameterType="hashmap" resultType="_int">
		SELECT
				COUNT(*)
		FROM
				BOARD
		WHERE
				CATE_NO = 30
		AND
				BOARD_STATUS = 'Y'
		<if test="condition == 'content'">
		AND
				BOARD_CONTENT 
		</if>
		<if test="condition == 'writer'">
		AND
				BOARD_WRITER
		</if>
		<if test="condition == 'title'">
		AND
				BOARD_TITLE
		</if>
		LIKE
				'%' || #{keyword} || '%'
		 
	</select>
	
	<select id="selectFSearch" parameterType="hashmap" resultMap="boardResultSet">
		SELECT
				BOARD_NO,
				BOARD_WRITER,
				BOARD_TITLE,
				BOARD_CONTENT,
				TO_CHAR(CREATE_DATE, 'YYYY-MM-DD') AS "CREATE_DATE",
				COUNT
		FROM	
				BOARD
		WHERE
				CATE_NO = 30
		AND
				BOARD_STATUS = 'Y'
		<choose>
			<when test="condition == 'content'">
		AND
			BOARD_CONTENT	
			</when>
			<when test="condition == 'writer'">
		AND
			BOARD_WRITER	
			</when>
			<otherwise>
		AND
			BOARD_TITLE
			</otherwise>
		</choose>
		LIKE
				'%' || #{keyword} || '%'
		ORDER
		   BY
		   		BOARD_NO DESC
	</select>
	
	<select id="selectDSearchCount" parameterType="hashmap" resultType="_int">
		SELECT
				COUNT(*)
		FROM
				DEAL
		WHERE
				SALE_STATUS = 'N'
		<if test="condition == 'showTitle'">
		AND
				SHOW_TITLE 
		</if>
		<if test="condition == 'writer'">
		AND
				USER_ID
		</if>
		LIKE
				'%' || #{keyword} || '%'
		 
	</select>
	
	<select id="selectDSearchList" parameterType="hashmap" resultMap="dealResultSet">
		SELECT
				DEAL_NO,
				USER_ID,
				SHOW_TITLE,
				TICKET_DATE,
				SEAT_FLOOR,
				SEAT_RANK,
				SEAT_AREA,
				SEAT_COL,
				SEAT_DES,
				TICKET_PRICE,
				TICKET_MANY
		FROM	
				DEAL
		WHERE
				SALE_STATUS = 'N'
		<choose>
			<when test="condition == 'showTitle'">
		AND
				SHOW_TITLE	
			</when>
			<otherwise>
		AND
			USER_ID	
			</otherwise>
		</choose>
		LIKE
				'%' || #{keyword} || '%'
		ORDER
		   BY
		   		DEAL_NO DESC
	</select>

</mapper>